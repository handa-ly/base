server:
  port: 8080
  tomcat:
    # 最大线程数
    max-threads: 6
    # 最小线程数
    min-spare-threads: 2
    # 队列长度
    accept-count: 2
    # 最大链接数
    max-connections: 1000
    #链接建立超时时间
  connection-timeout: 1000
#    keep-alive-timeout: 300000
#    max-keep-alive-requests: 1000

logging:
  level:
    com.example.demo: debug


mybatis:
  # spring boot集成mybatis的方式打印sql
  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://175.24.45.45:3306/quartz?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: handa2695170923

  mvc:
    async:
      request-timeout: 2000

  quartz:
    #auto-startup: false
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    startup-delay: 60
    overwrite-existing-jobs: true
    properties:
      org:
        quartz:
          dataSource:
            masterDataSource:
              driver: com.mysql.cj.jdbc.Driver
              URL: jdbc:mysql://175.24.45.45:3306/quartz?useUnicode=true&characterEncoding=UTF-8
              user: root
              password: handa2695170923
          scheduler:
            instanceId: AUTO #默认主机名和时间戳生成实例ID,可以是任何字符串，但对于所有调度程序来说，必须是唯一的 对应qrtz_scheduler_state INSTANCE_NAME字段
            instanceName: clusteredScheduler
          jobStore:
            dataSource: masterDataSource
            acquireTriggersWithinLock: true
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate #我们仅为数据库制作了特定于数据库的代理
            useProperties: false #以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题。
            tablePrefix: QRTZ_ #数据库表前缀
            misfireThreshold: 60000 #在被认为“失火”之前，调度程序将“容忍”一个Triggers将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）。
            clusterCheckinInterval: 5000 #设置此实例“检入”*与群集的其他实例的频率（以毫秒为单位）。影响检测失败实例的速度。
            isClustered: false #打开群集功能,集群模式需要在多台服务器上做时间同步或者使用zookeeper去解决
          threadPool: #连接池
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 20
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true